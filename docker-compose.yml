version: "3"
services:
  web:
    image: nginx:1.15.12
    ports:
      - 80:80
    volumes:
      - ./docs/_site:/usr/share/nginx/html:ro
      - ./root/etc/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./root/etc/nginx/sites-enabled:/etc/nginx/sites-enabled:ro
    networks:
      - labnet
  postgres:
    image: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./root/docker-entrypoint-initdb.db:/docker-entrypoint-initdb.db:ro
      - ~/.pg_service.conf:/.pg_service.conf
    networks:
      - labnet
  rstudio:
    image: sesync/lab-rstudio
    volumes:
      - nfs:/nfs
      - home:/home
    networks:
      - labnet
  jupyter:
    image: sesync/lab-jupyter
    volumes:
      - nfs:/nfs
      - home:/home
    networks:
      - labnet
  # init:
  #   image: sesync/lab-debian
  #   volumes:
  #     - nfs:/nfs
  #     - ./handouts:/tmp
  #   command: ["find", "/tmp", "-maxdepth", "1", "-name", "*.sh", "-execdir", "sh", "{}", ";"]
  #   deploy:
  #     restart_policy:
  #       condition: none
  #   depends_on:
  #     - postgres
volumes:
  postgres:
  nfs:
  home:
networks:
  labnet:

# # TODO / IDEAS
# - load postgres data at run
# - use nginx env variable to change the published site to activate links to apps ... somehow
#   - maybe let github build site on github, and jekyll build docs/_site with environment for producion
# - pwm is an open source projects
#    - what I'd love: a ldap container with api for adding users and changing passwords to work with html form
# - ldap seems to have some home directory configuration? https://serverfault.com/questions/105160/ldap-users-home-directories
# - is VOLUME even necessary in the Dockerfiles? (since EXPOSE is not)
# - this won't work on a swarm. volumes are local to a node
# - setting up the data! (more below)
# - handouts Makefile target to build docs/_site
# - just allow student user to access training database without password
#   - remember: pg_dump using /entrypoint... from the real training database
#
# with init
# nfs: rsync in script, data in handouts
# pg: psql in scrip, data in handouts
# - does not update with deploy
#
# docker commands
# nfs: docker cp, data in handouts
# pg: port open, psql, port close
